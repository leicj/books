(define zero (lambda (f) (lambda (x) x)))

(define (add-1 n)
  (lambda (f) (lambda (x) (f ((n f) x)))))

(add-1 zero)
=> (lambda (f)
     (lambda (x) (f ((zero f) x))))
=> (lambda (f)
     (lambda (x) (f ((
                      (lambda (f)
                        (lambda (x) x))
                      f) x))))
=> (lambda (f)
     (lambda (x) (f ((lambda (x) x) x))))
=> (lambda (f)
     (lambda (x) (f x)))

(define one (add-1 zero))
one
=> (lambda (f)
     (lambda (x) (f x)))

(add-1 (add-1 zero))
=> (add-1 (lambda (f)
     (lambda (x) (f x))))
=> (lambda (f) 
     (lambda (x) (f ((
                      (lambda (f)
                        (lambda (x) (f x))) f) x))))
=> (lambda (f)
     (lambda (x) (f (
                      (lambda (x) (f x)) x))))
=> (lambda (f)
     (lambda (x) (f (f x))))

(define n (add-1 (add-1 (... n times zero))))
=>
(lambda (f)
  (lambda (x) (f ((n f) x))))

;define +
(define +
  (lambda (m)
    (lambda (n)
      (lambda (f)
        (lambda (x)
          (f ((n f) x)))))))


