(define (square-list-3 items)
  (define (iter things answer)
    (if (null? things)
        answer
        (iter (cdr things)
              (cons (square (car things))
                    answer))))
  (iter items nil))
(square-list-3 (list 1 2 3 4))

(define (square-list-4 items)
  (define (iter things answer)
    (if (null? things)
        answer
        (iter (cdr things)
              (cons answer
                    (square (car things))))))
  (iter items nil))
;(16 9 4 1)
(square-list-3 (list 1 2 3 4))
;((((() . 1) . 4) . 9) . 16)
(square-list-4 (list 1 2 3 4))
