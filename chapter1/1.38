(define (cont-frac-recursive n d k)
  (define (iter-cont-frac index)
    (if (= index k)
        (/ (n index) (d index))
        (/ (n index) (+ (d index)
                        (iter-cont-frac (+ index 1))))))
  (iter-cont-frac 1))

(define (D i)
  (cond ((= i 2)
         2)
        ((and (> i 2) (not (remainder (- i 2) 3)))
         (+ 2 (* 2 (/ (- i 2) 3))))
        (else
         1)))
;0.723606797749979
(cont-frac-recursive (lambda (i) 1.0)
                     D
                     100)
